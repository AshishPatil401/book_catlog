from app import db
from datetime import datetime



class Publication(db.Model):

    __tablename__ = 'publication'
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(80), nullable=False)

    def __init__(self, name):
        self.name = name

    def __repr__(self) -> str:
        return f'Publication Name : {self.name}'



class Books(db.Model):

    __tablename__ = 'books'
    id = db.Column(db.Integer, primary_key=True)
    title = db.Column(db.String(500), nullable=False, index=True)
    author = db.Column(db.String(350))
    avg_rating = db.Column(db.Float)
    book_format = db.Column(db.String(50))
    image_url = db.Column(db.String(200), unique=True)
    num_pages = db.Column(db.Integer)
    pub_date = db.Column(db.DateTime, default=datetime.utcnow())
    # Establish a relationship between Publications and Books table.
    # One to many relationship Publication and Books table.
    pub_id = db.Column(db.Integer, db.ForeignKey('publication.id'))  

    def __init__(self, title, author, avg_rating, book_format, image_url, num_pages, pub_id):
        # self.id = id      # Automatically generated by SQLAlchemy
        self.title = title
        self.author = author
        self.avg_rating = avg_rating
        self.book_format = book_format
        self.image_url = image_url
        self.num_pages = num_pages
        # self.pub_date = pub_date
        self.pub_id = pub_id

    def __repr__(self) -> str:
        return f'Book name: [{self.title}] , Author Name: [{self.author}]'
